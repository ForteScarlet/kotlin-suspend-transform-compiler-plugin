FILE fqName:<root> fileName:/Main.kt
  CLASS CLASS name:Api modality:FINAL visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Api<T of <root>.Api>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any] reified:false
    CONSTRUCTOR visibility:public <> () returnType:<root>.Api<T of <root>.Api> [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Api modality:FINAL visibility:public superTypes:[kotlin.Any]'
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS CLASS name:Bar modality:OPEN visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Bar
    CONSTRUCTOR visibility:public <> () returnType:<root>.Bar [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Bar modality:OPEN visibility:public superTypes:[kotlin.Any]'
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS CLASS name:FooImpl modality:FINAL visibility:public superTypes:[<root>.Foo<<root>.Tar>]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.FooImpl
    CONSTRUCTOR visibility:public <> () returnType:<root>.FooImpl [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:FooImpl modality:FINAL visibility:public superTypes:[<root>.Foo<<root>.Tar>]'
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Foo
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in <root>.Foo
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:runAsync visibility:public modality:OPEN <R> ($this:<root>.Foo<<root>.Tar>, api:<root>.Api<R of <root>.FooImpl.runAsync>) returnType:java.util.concurrent.CompletableFuture [fake_override]
      annotations:
        Api4J
      overridden:
        public open fun runAsync <R> (api: <root>.Api<R of <root>.Foo.runAsync>): java.util.concurrent.CompletableFuture declared in <root>.Foo
      TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any] reified:false
      $this: VALUE_PARAMETER name:<this> type:<root>.Foo<<root>.Tar>
      VALUE_PARAMETER name:api index:0 type:<root>.Api<R of <root>.FooImpl.runAsync>
    FUN FAKE_OVERRIDE name:runBlocking visibility:public modality:OPEN <R> ($this:<root>.Foo<<root>.Tar>, api:<root>.Api<R of <root>.FooImpl.runBlocking>) returnType:R of <root>.FooImpl.runBlocking [fake_override]
      annotations:
        Api4J
      overridden:
        public open fun runBlocking <R> (api: <root>.Api<R of <root>.Foo.runBlocking>): R of <root>.Foo.runBlocking declared in <root>.Foo
      TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any] reified:false
      $this: VALUE_PARAMETER name:<this> type:<root>.Foo<<root>.Tar>
      VALUE_PARAMETER name:api index:0 type:<root>.Api<R of <root>.FooImpl.runBlocking>
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in <root>.Foo
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:valueAsync visibility:public modality:OPEN <> ($this:<root>.Foo<<root>.Tar>) returnType:java.util.concurrent.CompletableFuture [fake_override]
      annotations:
        Api4J
      overridden:
        public open fun valueAsync (): java.util.concurrent.CompletableFuture declared in <root>.Foo
      $this: VALUE_PARAMETER name:<this> type:<root>.Foo<<root>.Tar>
    FUN FAKE_OVERRIDE name:valueBlocking visibility:public modality:OPEN <> ($this:<root>.Foo<<root>.Tar>) returnType:<root>.Tar [fake_override]
      annotations:
        Api4J
      overridden:
        public open fun valueBlocking (): T of <root>.Foo declared in <root>.Foo
      $this: VALUE_PARAMETER name:<this> type:<root>.Foo<<root>.Tar>
    FUN name:run visibility:public modality:OPEN <R> ($this:<root>.FooImpl, api:<root>.Api<R of <root>.FooImpl.run>) returnType:R of <root>.FooImpl.run [suspend]
      overridden:
        public abstract fun run <R> (api: <root>.Api<R of <root>.Foo.run>): R of <root>.Foo.run declared in <root>.Foo
      TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any] reified:false
      $this: VALUE_PARAMETER name:<this> type:<root>.FooImpl
      VALUE_PARAMETER name:api index:0 type:<root>.Api<R of <root>.FooImpl.run>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun run <R> (api: <root>.Api<R of <root>.FooImpl.run>): R of <root>.FooImpl.run declared in <root>.FooImpl'
          CALL 'public final fun TODO (): kotlin.Nothing declared in kotlin' type=kotlin.Nothing origin=null
    FUN name:value visibility:public modality:OPEN <> ($this:<root>.FooImpl) returnType:<root>.Tar [suspend]
      overridden:
        public abstract fun value (): T of <root>.Foo declared in <root>.Foo
      $this: VALUE_PARAMETER name:<this> type:<root>.FooImpl
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun value (): <root>.Tar declared in <root>.FooImpl'
          CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.Tar' type=<root>.Tar origin=null
  CLASS CLASS name:Tar modality:FINAL visibility:public superTypes:[<root>.Bar]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Tar
    CONSTRUCTOR visibility:public <> () returnType:<root>.Tar [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.Bar'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Tar modality:FINAL visibility:public superTypes:[<root>.Bar]'
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Bar
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in <root>.Bar
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in <root>.Bar
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS INTERFACE name:Foo modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Foo<T of <root>.Foo>
    TYPE_PARAMETER name:T index:0 variance:out superTypes:[<root>.Bar] reified:false
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN GENERATED[love.forte.plugin.suspendtrans.fir.SuspendTransformPluginKey] name:runAsync visibility:public modality:OPEN <R> ($this:<root>.Foo<T of <root>.Foo>, api:<root>.Api<R of <root>.Foo.runAsync>) returnType:java.util.concurrent.CompletableFuture
      annotations:
        Api4J
      TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any] reified:false
      $this: VALUE_PARAMETER name:<this> type:<root>.Foo<T of <root>.Foo>
      VALUE_PARAMETER name:api index:0 type:<root>.Api<R of <root>.Foo.runAsync>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun runAsync <R> (api: <root>.Api<R of <root>.Foo.runAsync>): java.util.concurrent.CompletableFuture declared in <root>.Foo'
          CALL 'public final fun $runInAsync$ <T> (block: kotlin.coroutines.SuspendFunction0<T of love.forte.plugin.suspendtrans.runtime.$runInAsync$>, scope: kotlinx.coroutines.CoroutineScope?): java.util.concurrent.CompletableFuture declared in love.forte.plugin.suspendtrans.runtime' type=java.util.concurrent.CompletableFuture origin=null
            <T>: <none>
            block: FUN_EXPR type=kotlin.coroutines.SuspendFunction0<java.util.concurrent.CompletableFuture> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<no name provided> visibility:local modality:FINAL <> () returnType:java.util.concurrent.CompletableFuture [suspend]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <no name provided> (): java.util.concurrent.CompletableFuture declared in <root>.Foo.runAsync'
                    CALL 'public abstract fun run <R> (api: <root>.Api<R of <root>.Foo.run>): R of <root>.Foo.run declared in <root>.Foo' type=R of <root>.Foo.run origin=null
                      <R>: <none>
                      $this: GET_VAR '<this>: <root>.Foo<T of <root>.Foo> declared in <root>.Foo.runAsync' type=<root>.Foo<T of <root>.Foo> origin=null
                      api: GET_VAR 'api: <root>.Api<R of <root>.Foo.runAsync> declared in <root>.Foo.runAsync' type=<root>.Api<R of <root>.Foo.runAsync> origin=null
    FUN GENERATED[love.forte.plugin.suspendtrans.fir.SuspendTransformPluginKey] name:runBlocking visibility:public modality:OPEN <R> ($this:<root>.Foo<T of <root>.Foo>, api:<root>.Api<R of <root>.Foo.runBlocking>) returnType:R of <root>.Foo.runBlocking
      annotations:
        Api4J
      TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any] reified:false
      $this: VALUE_PARAMETER name:<this> type:<root>.Foo<T of <root>.Foo>
      VALUE_PARAMETER name:api index:0 type:<root>.Api<R of <root>.Foo.runBlocking>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun runBlocking <R> (api: <root>.Api<R of <root>.Foo.runBlocking>): R of <root>.Foo.runBlocking declared in <root>.Foo'
          CALL 'public final fun $runInBlocking$ <T> (block: kotlin.coroutines.SuspendFunction0<T of love.forte.plugin.suspendtrans.runtime.$runInBlocking$>): T of love.forte.plugin.suspendtrans.runtime.$runInBlocking$ declared in love.forte.plugin.suspendtrans.runtime' type=T of love.forte.plugin.suspendtrans.runtime.$runInBlocking$ origin=null
            <T>: <none>
            block: FUN_EXPR type=kotlin.coroutines.SuspendFunction0<R of <root>.Foo.runBlocking> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<no name provided> visibility:local modality:FINAL <> () returnType:R of <root>.Foo.runBlocking [suspend]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <no name provided> (): R of <root>.Foo.runBlocking declared in <root>.Foo.runBlocking'
                    CALL 'public abstract fun run <R> (api: <root>.Api<R of <root>.Foo.run>): R of <root>.Foo.run declared in <root>.Foo' type=R of <root>.Foo.run origin=null
                      <R>: <none>
                      $this: GET_VAR '<this>: <root>.Foo<T of <root>.Foo> declared in <root>.Foo.runBlocking' type=<root>.Foo<T of <root>.Foo> origin=null
                      api: GET_VAR 'api: <root>.Api<R of <root>.Foo.runBlocking> declared in <root>.Foo.runBlocking' type=<root>.Api<R of <root>.Foo.runBlocking> origin=null
    FUN GENERATED[love.forte.plugin.suspendtrans.fir.SuspendTransformPluginKey] name:valueAsync visibility:public modality:OPEN <> ($this:<root>.Foo<T of <root>.Foo>) returnType:java.util.concurrent.CompletableFuture
      annotations:
        Api4J
      $this: VALUE_PARAMETER name:<this> type:<root>.Foo<T of <root>.Foo>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun valueAsync (): java.util.concurrent.CompletableFuture declared in <root>.Foo'
          CALL 'public final fun $runInAsync$ <T> (block: kotlin.coroutines.SuspendFunction0<T of love.forte.plugin.suspendtrans.runtime.$runInAsync$>, scope: kotlinx.coroutines.CoroutineScope?): java.util.concurrent.CompletableFuture declared in love.forte.plugin.suspendtrans.runtime' type=java.util.concurrent.CompletableFuture origin=null
            <T>: <none>
            block: FUN_EXPR type=kotlin.coroutines.SuspendFunction0<java.util.concurrent.CompletableFuture> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<no name provided> visibility:local modality:FINAL <> () returnType:java.util.concurrent.CompletableFuture [suspend]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <no name provided> (): java.util.concurrent.CompletableFuture declared in <root>.Foo.valueAsync'
                    CALL 'public abstract fun value (): T of <root>.Foo declared in <root>.Foo' type=T of <root>.Foo origin=null
                      $this: GET_VAR '<this>: <root>.Foo<T of <root>.Foo> declared in <root>.Foo.valueAsync' type=<root>.Foo<T of <root>.Foo> origin=null
    FUN GENERATED[love.forte.plugin.suspendtrans.fir.SuspendTransformPluginKey] name:valueBlocking visibility:public modality:OPEN <> ($this:<root>.Foo<T of <root>.Foo>) returnType:T of <root>.Foo
      annotations:
        Api4J
      $this: VALUE_PARAMETER name:<this> type:<root>.Foo<T of <root>.Foo>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun valueBlocking (): T of <root>.Foo declared in <root>.Foo'
          CALL 'public final fun $runInBlocking$ <T> (block: kotlin.coroutines.SuspendFunction0<T of love.forte.plugin.suspendtrans.runtime.$runInBlocking$>): T of love.forte.plugin.suspendtrans.runtime.$runInBlocking$ declared in love.forte.plugin.suspendtrans.runtime' type=T of love.forte.plugin.suspendtrans.runtime.$runInBlocking$ origin=null
            <T>: <none>
            block: FUN_EXPR type=kotlin.coroutines.SuspendFunction0<T of <root>.Foo> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<no name provided> visibility:local modality:FINAL <> () returnType:T of <root>.Foo [suspend]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <no name provided> (): T of <root>.Foo declared in <root>.Foo.valueBlocking'
                    CALL 'public abstract fun value (): T of <root>.Foo declared in <root>.Foo' type=T of <root>.Foo origin=null
                      $this: GET_VAR '<this>: <root>.Foo<T of <root>.Foo> declared in <root>.Foo.valueBlocking' type=<root>.Foo<T of <root>.Foo> origin=null
    FUN name:run visibility:public modality:ABSTRACT <R> ($this:<root>.Foo<T of <root>.Foo>, api:<root>.Api<R of <root>.Foo.run>) returnType:R of <root>.Foo.run [suspend]
      annotations:
        JvmBlocking(baseName = <null>, suffix = <null>, asProperty = <null>)
        JvmAsync(baseName = <null>, suffix = <null>, asProperty = <null>)
        TargetMarker(value = "cnVuRm9vPFQ+bnVsbEFwaTxSPg==")
        JvmSynthetic
      TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any] reified:false
      $this: VALUE_PARAMETER name:<this> type:<root>.Foo<T of <root>.Foo>
      VALUE_PARAMETER name:api index:0 type:<root>.Api<R of <root>.Foo.run>
    FUN name:value visibility:public modality:ABSTRACT <> ($this:<root>.Foo<T of <root>.Foo>) returnType:T of <root>.Foo [suspend]
      annotations:
        JvmBlocking(baseName = <null>, suffix = <null>, asProperty = <null>)
        JvmAsync(baseName = <null>, suffix = <null>, asProperty = <null>)
        TargetMarker(value = "dmFsdWVGb288VD5udWxs")
        JvmSynthetic
      $this: VALUE_PARAMETER name:<this> type:<root>.Foo<T of <root>.Foo>
