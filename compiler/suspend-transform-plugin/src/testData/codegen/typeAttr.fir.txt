FILE: Main.kt
    public open class Bar : R|kotlin/Any| {
        public constructor(): R|Bar| {
            super<R|kotlin/Any|>()
        }

    }
    public final class Tar : R|Bar| {
        public constructor(): R|Tar| {
            super<R|Bar|>()
        }

    }
    public final class Api<T : R|kotlin/Any|> : R|kotlin/Any| {
        public constructor<T : R|kotlin/Any|>(): R|Api<T>| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract interface Foo<out T : R|Bar|> : R|kotlin/Any| {
        @R|love/forte/plugin/suspendtrans/annotation/JvmBlocking|() @R|love/forte/plugin/suspendtrans/annotation/JvmAsync|() @R|kotlin/jvm/JvmSynthetic|() public abstract suspend fun value(): R|T|

        @R|love/forte/plugin/suspendtrans/annotation/JvmBlocking|() @R|love/forte/plugin/suspendtrans/annotation/JvmAsync|() @R|kotlin/jvm/JvmSynthetic|() public abstract suspend fun <R : R|kotlin/Any|> run(api: R|Api<R>|): R|R|

        @R|love/forte/plugin/suspendtrans/annotation/Api4J|() public open fun valueAsync(): R|java/util/concurrent/CompletableFuture<out T>| {
            ^valueAsync R|love/forte/plugin/suspendtrans/runtime/$runInAsync$|(suspend fun <anonymous>(): R|T| <inline=Unknown>  {
                ^ this@R|/Foo|.R|/Foo.value|()
            }
            , (this@R|/Foo| as? R|kotlinx/coroutines/CoroutineScope|))
        }

        @R|love/forte/plugin/suspendtrans/annotation/Api4J|() public open fun valueBlocking(): R|T| {
            ^valueBlocking R|love/forte/plugin/suspendtrans/runtime/$runInBlocking$|(suspend fun <anonymous>(): R|T| <inline=Unknown>  {
                ^ this@R|/Foo|.R|/Foo.value|()
            }
            )
        }

        @R|love/forte/plugin/suspendtrans/annotation/Api4J|() public open fun <R : R|kotlin/Any|> runAsync(api: R|Api<R>|): R|java/util/concurrent/CompletableFuture<out R>| {
            ^runAsync R|love/forte/plugin/suspendtrans/runtime/$runInAsync$|(suspend fun <anonymous>(): R|R| <inline=Unknown>  {
                ^ this@R|/Foo|.R|/Foo.run|<R|R|>(R|<local>/api|)
            }
            , (this@R|/Foo| as? R|kotlinx/coroutines/CoroutineScope|))
        }

        @R|love/forte/plugin/suspendtrans/annotation/Api4J|() public open fun <R : R|kotlin/Any|> runBlocking(api: R|Api<R>|): R|R| {
            ^runBlocking R|love/forte/plugin/suspendtrans/runtime/$runInBlocking$|(suspend fun <anonymous>(): R|R| <inline=Unknown>  {
                ^ this@R|/Foo|.R|/Foo.run|<R|R|>(R|<local>/api|)
            }
            )
        }

    }
    public final class FooImpl : R|Foo<Tar>| {
        public constructor(): R|FooImpl| {
            super<R|kotlin/Any|>()
        }

        public open override suspend fun value(): R|Tar| {
            ^value R|/Tar.Tar|()
        }

        public open override suspend fun <R : R|kotlin/Any|> run(api: R|Api<R>|): R|R| {
            ^run R|kotlin/TODO|()
        }

    }
