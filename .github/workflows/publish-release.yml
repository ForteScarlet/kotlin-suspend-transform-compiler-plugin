name: build and publish release
on:
  push:
    tags:
      - v**

env:
  GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
  GPG_SECRET_KEY: ${{ secrets.GPG_PRI_KEY }}
  GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
  OSSRH_USER: ${{ secrets.OSS_USERNAME }}
  OSSRH_PASSWORD: ${{ secrets.OSS_PASSWORD }}
  RELEASE: true
  CI: true
  GRADLE_OPTS: "-Xmx8G -XX:MaxPermSize=2G -Dfile.encoding=UTF-8"

jobs:
  test-build-publish:
    name: Test and build
    runs-on: ubuntu-latest
    steps:
      # 检出仓库代码
      - name: Check out repo
        uses: actions/checkout@v2
        with:
          # release workflow should have access to all tags
          fetch-depth: 0

      # Setup java
      # https://github.com/marketplace/actions/setup-java-jdk
      - name: Setup Java 8
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Test
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: assemble allTests --info --warning-mode all

      - name: Publish to sonatype
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: |
            build
            publishToSonatype
            closeAndReleaseStagingRepository
            publishPlugins
            --info
            --warning-mode all
            -x test
            -Pkotlin.daemon.jvmargs="-Xmx8G -XX:MaxPermSize=2g -Dfile.encoding=UTF-8"
            -Porg.gradle.jvmargs="-Xmx8G -XX:MaxPermSize=2g -Dfile.encoding=UTF-8"
            -Porg.gradle.workers.max=16
            -Porg.gradle.parallel=true
            -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} 
            -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}
            

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: test-build-publish
    permissions:
      contents: write
    steps:
#      # 检出仓库代码
#      - name: Check Out Repo
#        uses: actions/checkout@v2

        # Create gitHub release
      - name: Create Github Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          token: ${{ secrets.FORTE_TOKEN }}
#          body_path: .changelog/${{ github.ref_name }}.md
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, 'preview') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
