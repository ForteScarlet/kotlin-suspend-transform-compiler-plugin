name: build and publish release
on:
  push:
    tags:
      - v**
  # 手动触发工作流
  workflow_dispatch:

env:
  JAVA_VERSION: 11
  JAVA_DISTRIBUTION: zulu
  GRADLE_VERSION: 8.10.2
  IS_CI: true
  SIGNING_KEY_ID: ${{ secrets.GPG_KEY_ID }}
  GPG_KEY_CONTENTS: ${{ secrets.GPG_PRI_KEY }}
  SIGNING_PASSWORD: ${{ secrets.GPG_PASSWORD }}
  MAVEN_CENTRAL_USERNAME: ${{ secrets.CENTRAL_PORTAL_USERNAME }}
  MAVEN_CENTRAL_PASSWORD: ${{ secrets.CENTRAL_PORTAL_PASSWORD }}
  GRADLE_OPTS: "-Dfile.encoding=UTF-8"

jobs:
  test:
    name: Build test
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}
      - run: gradle assemble build test allTests -s

  publish:
    name: Publish
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Publish to Maven Central
        run: gradle publishAndReleaseToMavenCentral -s --warning-mode all -x test --build-cache --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_org.gradle.jvmargs: "-XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8"
          ORG_GRADLE_PROJECT_org.gradle.daemon: "false"
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ env.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ env.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ env.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ env.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ env.GPG_KEY_CONTENTS }}

  publish-gradle-plugin:
    name: Publish Gradle Plugin
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Publish to gradle
        run: |
          gradle build publishPlugins -s --warning-mode all -x test --build-cache
        env:
          PLUGIN_AUTO: true
          ORG_GRADLE_PROJECT_org.gradle.jvmargs: "-XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8"
          ORG_GRADLE_PROJECT_org.gradle.daemon: "false"
          ORG_GRADLE_PROJECT_gradle.publish.key: ${{ secrets.GRADLE_PUBLISH_KEY }}
          ORG_GRADLE_PROJECT_gradle.publish.secret: ${{ secrets.GRADLE_PUBLISH_SECRET }}

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [ publish, publish-gradle-plugin ]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Create changelog
        run: gradle createChangelog

      - name: Create Github Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.FORTE_TOKEN }}
          body_path: .changelog/${{ github.ref_name }}.md
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, 'preview') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'RC') }}
